{"ast":null,"code":"var _jsxFileName = \"/Users/jerin/Programming/Codepath/Github/Bet1.0/unit7Lab/client/src/pages/ReadPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadPosts = props => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select().order('created_at', {\n        ascending: true\n      });\n    };\n    setPosts(data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: posts && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: 'No Challenges Yet ðŸ˜ž'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = ReadPosts;\nexport default ReadPosts;\nvar _c;\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","jsxDEV","_jsxDEV","ReadPosts","props","_s","posts","setPosts","fetchPost","data","from","select","order","ascending","className","children","length","map","post","index","id","title","author","description","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerin/Programming/Codepath/Github/Bet1.0/unit7Lab/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = (props) => {\n\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPost = async () => {\n            const {data} = await supabase\n                .from('Posts')\n                .select()\n                .order('created_at', {ascending: true})\n        }\n        setPosts(data);\n    }, [props]);\n    \n    return (\n        <div className=\"ReadPosts\">\n            {\n                posts && posts.length > 0 ?\n                posts.map((post,index) => \n                   <Card id={post.id} title={post.title} author={post.author} description={post.description} key={index}/>\n                ) : <h2>{'No Challenges Yet ðŸ˜ž'}</h2>\n            }\n        </div>  \n    )\n}\n\nexport default ReadPosts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMT,QAAQ,CACxBU,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,YAAY,EAAE;QAACC,SAAS,EAAE;MAAI,CAAC,CAAC;IAC/C,CAAC;IACDN,QAAQ,CAACE,IAAI,CAAC;EAClB,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACIF,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,EAElBT,KAAK,IAAIA,KAAK,CAACU,MAAM,GAAG,CAAC,GACzBV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAClBjB,OAAA,CAACH,IAAI;MAACqB,EAAE,EAAEF,IAAI,CAACE,EAAG;MAACC,KAAK,EAAEH,IAAI,CAACG,KAAM;MAACC,MAAM,EAAEJ,IAAI,CAACI,MAAO;MAACC,WAAW,EAAEL,IAAI,CAACK;IAAY,GAAMJ,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzG,CAAC,gBAAGzB,OAAA;MAAAa,QAAA,EAAK;IAAsB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExC,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAxBKF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}